serprot_pairs_parsed <- read.delim("~/Bioinformatics/Bioinformatics/assignment_3/serprot_pairs_parsed.txt")
View(serprot_pairs_parsed)
x <- serprot_pairs_parsed[,"XIDENT"]
x <- serprot_pairs_parsed[,".XIDENT"]
x <- serprot_pairs_parsed[,"X.IDENT"]
y <- serprot_pairs_parsed[,"NAS"]
z <- serprot_pairs_parsed[,"SCORE"]
plot(x,y,z)
plot(x,y)
plot(x,z)
plot(y,z)
ILEN <- serprot_pairs_parsed[,"ILEN"]
MATCH <- serprot_pairs_parsed[,"MATCH"]
plot(ILEN,MATCH)
plot(ILEN,x)
plot(z,ILEN)
plot(ILEN,z)
JLEN <- serprot_pairs_parsed[,"JLEN"]
plot(JLEN,x)
savehistory("~/serprot.Rhistory")
ig_pairs_parsed <- read.table("~/Bioinformatics/Bioinformatics/assignment_3/ig_pairs_parsed.txt", header=T, quote="\"")
View(ig_pairs_parsed)
X.IDENT <- ig_pairs_parsed[,"X.IDENT"]
NAS <- ig_pairs_parsed[,"NAS"]
SCORE <- ig_pairs_parsed[,"SCORE"]
ILEN <- ig_pairs_parsed[,"ILEN"]
MATCH <- ig_pairs_parsed[,"MATCH"]
plot(X.IDENT,NAS)
ig_pairs_parsed <- read.table("~/Bioinformatics/Bioinformatics/assignment_3/ig_pairs_parsed.txt", header=T, quote="\"")
View(ig_pairs_parsed)
IDENT <- ig_pairs_parsed[1:1188111,"X.IDENT"]
NAS <- ig_pairs_parsed[1:1188111,"NAS"]
SCORE <- ig_pairs_parsed[1:1188111,"SCORE"]
plot(IDENT,SCORE)
SCORE <- ig_pairs_parsed[1:1188110,"SCORE"]
SCORE <- ig_pairs_parsed[1:1188111,"SCORE"]
plot(IDENT,SCORE)
plot(NAS,SCORE)
MATCH <- ig_pairs_parsed[1:1188110,"MATCH"]
ILEN <- ig_pairs_parsed[1:1188110,"ILEN"]
plot(ILEN,MATCH)
plot(ILEN,IDENT)
IDENT <- ig_pairs_parsed[1:1188110,"X.IDENT"]
plot(ILEN,IDENT)
plot(ILEN,SCORE)
SCORE <- ig_pairs_parsed[1:1188110,"SCORE"]
plot(ILEN,SCORE)
source('~/bioinformatics/Limma.R')
contrast.matrix
fir
fit
View(samples)
samples
samples <- eset$targets
.doDE <- function(eset)
{
samples <- eset$targets
# check the results of this
# convert into factors
samples <- as.factor(samples)
# set up the experimental design
design <- model.matrix(~0 + samples)
colnames(design) <- c("plus","minus")
# fit the linear model to the filtered expression set
fit <- lmFit(exprs(eset), design)
# set up a contrast matrix to compare tissues v cell line
contrast.matrix <- makeContrasts(plus_minus =  plus - minus,
levels=design)
# check the contrast matrix
contrast.matrix
# Now the contrast matrix is combined with the per-probeset linear model fit.
plus_fits <- contrasts.fit(fit, contrast.matrix)
plus_ebFit <- eBayes(plus_fits)
# return the top 10 results for any given contrast
# coef=1 is huvec_choroid, coef=2 is huvec_retina
ttab <- topTable(plus_ebFit, number=10000, coef=1)
nrow(topTable(plus_ebFit, coef=1, number=10000, lfc=5))
nrow(topTable(plus_ebFit, coef=1, number=10000, lfc=4))
nrow(topTable(plus_ebFit, coef=1, number=10000, lfc=3))
nrow(topTable(plus_ebFit, coef=1, number=10000, lfc=2))
# Get a list for probesets with a four fold change or more
tTable <- topTable(plus_ebFit, coef=1, number=10000, lfc=4)
annotation <- as.data.frame(select(chicken.db,
rownames(tTable),
c("ENSEMBL","SYMBOL")))
colnames(annotation) <- c("probeId","ensemblId","geneSymbol")
results <- merge(annotation, tTable,by.x="probeId",by.y="row.names")
head(results)
write.table(results, "results.txt", sep="\t", quote=FALSE)
return(results)
}
samples <- eset$targets
samples <- as.factor(samples)
# set up the experimental design
design <- model.matrix(~0 + samples)
colnames(design) <- c("plus","minus")
# fit the linear model to the filtered expression set
fit <- lmFit(exprs(eset), design)
View(eset)
samples <- eset$targets
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
celResults <- .doDE(celFilt$eset)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
setwd("~/Project")
source('~/.active-rstudio-document')
source('~/Project/DEseqscript.R')
source('~/.active-rstudio-document')
View(treatments)
source('~/.active-rstudio-document')
View(treatments)
View(nonZeroCounts)
source('~/.active-rstudio-document')
View(treatments)
View(nonZeroCounts)
